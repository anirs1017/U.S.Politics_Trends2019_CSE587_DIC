<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0321.1733                               -->
<workbook original-version='18.1' source-build='2019.1.2 (20191.19.0321.1733)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='crawl_wordCount' inline='true' name='federated.0mmw21l1bqxfzw1c3obux1ow1lev' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='crawl_wordCount' name='textscan.099mbbf0rydhcc135mrxp01zxcdc'>
            <connection class='textscan' directory='D:/M.S/2nd sem/DIC/Lab 2/tableau' filename='crawl_wordCount.txt' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.099mbbf0rydhcc135mrxp01zxcdc' name='crawl_wordCount.txt' table='[crawl_wordCount#txt]' type='table'>
          <columns character-set='windows-1252' header='no' locale='en_US' separator='&#9;'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='integer' name='F2' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[crawl_wordCount.txt]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;ibm-5348_P100-1997&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[crawl_wordCount.txt]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[crawl_wordCount.txt]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[F1]' role='dimension' type='nominal' />
      <column datatype='integer' name='[F2]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.483784' measure-ordering='alphabetic' measure-percentage='0.516216' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:F1:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;address&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;com&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Find&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;information&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;More√Ç&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;reaching&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tap&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;unsupported&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;year&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2019&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;button&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;disabled&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hmm&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;let&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Please&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;someone&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tweeted&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;way&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;account&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;embedding&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;icon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ly&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;problem&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;story&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;u&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Would&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Already&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;continue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;friend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;instantly&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;option&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;right&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;time&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;utm_source&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;agree&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;connection&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Follow&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;insight&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Network&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Reply&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Terms&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;update&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;add&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;click&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;experiencing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ig_twitter_share&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;matter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;proceed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;sure&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;unblock&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;wrote&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;bit&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;detected&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;hiccup&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Learn&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;person&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;shared&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;try√Ç&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;visit&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;√£&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;capacity&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;easily&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hover&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;like&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Policy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;spend&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tweets&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;web&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Back&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Create√Ç&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;happening&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;know&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;passionate&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;server&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;topic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;view&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Add&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;clicking&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;fastest&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;igshid&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;may&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;profile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;talking&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;unfold&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;www&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;always&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;conversation&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;get&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;outdated&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;See&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;timed&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;version&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;app&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Copy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Get&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JavaScript&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;p&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;see&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;timeline&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;via&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;best&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;delete&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;heart&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;latest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;people&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;share&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Try&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Viewing&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;browser&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Developer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;history&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;legacy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;pic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sign√Ç&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tweet&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;want&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;agreeing&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;content&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;follower&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;instagram&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;new&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Retweet&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;third&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;URL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;yet&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;added&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;code&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;feature&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Info&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;momentary&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;properly&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;tap&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;unfollow&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yahoo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;√¢&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;care&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;else√¢&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;http&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;location&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;precise&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Status&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Twitter&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;website&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;application&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;copying&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;getting&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;jump&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;party&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;send&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;top&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;video&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Agreement&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Continue&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Following&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;instant&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;one&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Retweeted&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;thought&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;using&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;you√¢&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;√Ç&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Catch&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;email√Ç&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HuffPost&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;love&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Privacy√Ç&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;status&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;twitter&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;work&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <filter class='quantitative' column='[F2]' filter-group='2' included-values='in-range'>
        <min>300</min>
        <max>3729</max>
      </filter>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='crawl_wordCount'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Common Crawl Word Count</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='crawl_wordCount' name='federated.0mmw21l1bqxfzw1c3obux1ow1lev' />
          </datasources>
          <datasource-dependencies datasource='federated.0mmw21l1bqxfzw1c3obux1ow1lev'>
            <column datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.0mmw21l1bqxfzw1c3obux1ow1lev].[none:F1:nk]' />
              <size column='[federated.0mmw21l1bqxfzw1c3obux1ow1lev].[sum:Number of Records:qk]' />
              <text column='[federated.0mmw21l1bqxfzw1c3obux1ow1lev].[none:F1:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D27298A5-5915-4D59-9324-941367D90158}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='crawl_wordCount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mmw21l1bqxfzw1c3obux1ow1lev].[none:F1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mmw21l1bqxfzw1c3obux1ow1lev].[none:F1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{93679777-FE67-4BC4-9464-91D2C7DD53AB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='crawl_wordCount' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
